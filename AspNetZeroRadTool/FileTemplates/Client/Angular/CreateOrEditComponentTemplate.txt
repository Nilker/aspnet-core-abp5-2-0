import { Component, ViewChild, Injector, Output, EventEmitter} from '@angular/core';
import { ModalDirective } from 'ngx-bootstrap';
import { {{Namespace_Relative_Here}}ServiceProxy, CreateOrEdit{{Entity_Name_Here}}Dto} from '@shared/service-proxies/service-proxies';
import { AppComponentBase } from '@shared/common/app-component-base';

@Component({
    selector: 'createOrEdit{{Entity_Name_Here}}Modal',
    templateUrl: './create-or-edit-{{entity_Name_Here}}-modal.component.html'
})
export class CreateOrEdit{{Entity_Name_Here}}ModalComponent extends AppComponentBase {

    @ViewChild('createOrEditModal') modal: ModalDirective;

    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();

    active = false;
    saving = false;

    {{entity_Name_Here}}: CreateOrEdit{{Entity_Name_Here}}Dto = new CreateOrEdit{{Entity_Name_Here}}Dto();

    constructor(
        injector: Injector,
        private _{{namespace_Relative_Here}}ServiceProxy: {{Namespace_Relative_Here}}ServiceProxy
    ) {
        super(injector);
    }

    show({{entity_Name_Here}}Id?: Primary_Key_4_Here): void {
        if (!{{entity_Name_Here}}Id) { 
			this.{{entity_Name_Here}} = new CreateOrEdit{{Entity_Name_Here}}Dto();
			this.{{entity_Name_Here}}.id = {{entity_Name_Here}}Id;
			this.active = true;
			this.modal.show();
        }
		else{
			this._{{namespace_Relative_Here}}ServiceProxy.get{{Entity_Name_Here}}ForEdit({{entity_Name_Here}}Id).subscribe({{entity_Name_Here}}Result => {
				this.{{entity_Name_Here}} = {{entity_Name_Here}}Result;
				this.active = true;
				this.modal.show();
			});
		}  
    }

    save(): void {
			this.saving = true;
			this._{{namespace_Relative_Here}}ServiceProxy.createOrEdit(this.{{entity_Name_Here}})
			 .finally(() => { this.saving = false; })
			 .subscribe(() => {
			    this.notify.info(this.l('SavedSuccessfully'));
				this.close();
				this.modalSave.emit(null);
             });
    }

    close(): void {
        this.active = false;
        this.modal.hide();
    }
}