@using System.Threading.Tasks
@using Abp.Application.Services.Dto
@using Abp.Extensions
@using Abp.Timing;
@using XyAuto.It.Web.Areas.AppAreaName.Models.Settings
@using XyAuto.It.Web.Areas.AppAreaName.Startup
@model SettingsViewModel
@{
    ViewBag.CurrentPageName = AppAreaNamePageNames.Tenant.Settings;
}
@section Scripts
    {
    <script abp-src="/view-resources/Areas/AppAreaName/Views/Settings/Index.js" asp-append-version="true"></script>
}
<div class="m-subheader">
    <div class="d-flex align-items-center">
        <div class="mr-auto col-sm-12 col-md-6">
            <h3 class="m-subheader__title m-subheader__title--separator">
                <span>@L("Settings")</span>
            </h3>
            <span class="m-section__sub">
                @L("SettingsHeaderInfo")
            </span>
        </div>
        <div class="col-sm-12 col-md-6 text-right">
            <button id="SaveAllSettingsButton" class="btn btn-primary blue"><i class="fa fa-floppy-o"></i> @L("SaveAll")</button>
        </div>
    </div>
</div>

<div class="m-content">
    <div class="m-portlet m-portlet--mobile">
        <div class="m-portlet__body">
            <div id="SettingsTabPanel" class="tabbable-line">
                <ul class="nav nav-tabs m-tabs-line" role="tablist">
                    @if (Clock.SupportsMultipleTimezone)
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsGeneralTab" aria-expanded="true" class="nav-link m-tabs__link active" data-toggle="tab" role="tab">
                                @L("General")
                            </a>
                        </li>
                    }

                    <li class="nav-item m-tabs__item">
                        <a href="#SettingsAppearanceTab" aria-expanded="false" class="nav-link m-tabs__link @((!Clock.SupportsMultipleTimezone) ? "active" : "")" data-toggle="tab" role="tab">
                            @L("Appearance")
                        </a>
                    </li>

                    <li class="nav-item m-tabs__item">
                        <a href="#SettingsUserManagementTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("UserManagement")
                        </a>
                    </li>

                    <li class="nav-item m-tabs__item">
                        <a href="#SecurityManagementTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("Security")
                        </a>
                    </li>

                    @if (!ViewBag.IsMultiTenancyEnabled)
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsEmailSmtpTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("EmailSmtp")
                            </a>
                        </li>
                    }
                    @if (ViewBag.IsMultiTenancyEnabled)
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#BillingTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("Invoice")
                            </a>
                        </li>
                    }
                </ul>

                <div class="tab-content">

                    @if (Clock.SupportsMultipleTimezone)
                    {
                        <div class="tab-pane active" id="SettingsGeneralTab">
                            <form id="GeneralSettingsForm">
                                <div class="form-group">
                                    <label>@L("Timezone")</label>
                                    @Html.DropDownList("Timezone", Model.TimezoneItems.Select(i => i.ToSelectListItem()), new { @class = "form-control" })
                                </div>
                                <div>
                                    @Html.Hidden("TimezoneForComparison", Model.Settings.General.TimezoneForComparison)
                                </div>
                            </form>
                        </div>
                    }

                    <div class="tab-pane @((!Clock.SupportsMultipleTimezone) ? "active" : "")" id="SettingsAppearanceTab">
                        <div class="row">
                            <div class="col-sm-6">
                                <form id="SettingsLogoUploadForm" method="POST" action="@Url.Action("UploadLogo", "TenantCustomization", new {area = string.Empty})">
                                    <h5>@L("ApplicationLogo")</h5>
                                    <div class="form-group">
                                        <input type="file" name="ApplicationLogoImage" class="col-lg-12"/>
                                        <span class="m-form__help col-lg-12">@L("UploadLogo_Info")</span>
                                    </div>
                                    <button class="btn btn-primary" type="submit">@L("Upload")</button>
                                    <button class="btn btn-default" type="reset">@L("Clear")</button>
                                </form>
                            </div>
                            <div class="col-sm-6">
                                <form id="SettingsCustomCssUploadForm" method="POST" action="@Url.Action("UploadCustomCss", "TenantCustomization", new {area = string.Empty})">
                                    <h5>@L("CustomCSS")</h5>
                                    <div class="form-group">
                                        <input type="file" name="CustomCssFile" class="col-lg-12"/>
                                        <span class="m-form__help col-lg-12">@L("UploadCSS_Info")</span>
                                    </div>
                                    <button class="btn btn-primary" type="submit">@L("Upload")</button>
                                    <button class="btn btn-default" type="reset">@L("Clear")</button>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane" id="SettingsUserManagementTab">

                        <form id="FormBasedRegistrationSettingsForm" class="m-form">
                            <h5>@L("FormBasedRegistration")</h5>
                            <div class="m-checkbox-list">
                                <div class="form-group m-form__group">
                                    <label for="Setting_AllowSelfRegistration" class="m-checkbox col-lg-12">
                                        <input id="Setting_AllowSelfRegistration" type="checkbox" name="AllowSelfRegistration" value="true" @(Model.Settings.UserManagement.AllowSelfRegistration ? "checked=\"checked\"" : "")>
                                        @L("AllowUsersToRegisterThemselves")
                                        <span></span>
                                    </label>
                                    <span class="m-form__help">@L("AllowUsersToRegisterThemselves_Hint")</span>
                                </div>
                                <div class="form-group m-form__group">
                                    <label for="Setting_IsNewRegisteredUserActiveByDefault" class="m-checkbox col-lg-12">
                                        <input id="Setting_IsNewRegisteredUserActiveByDefault" type="checkbox" name="IsNewRegisteredUserActiveByDefault" value="true" @(Model.Settings.UserManagement.IsNewRegisteredUserActiveByDefault ? "checked=\"checked\"" : "")>
                                        @L("NewRegisteredUsersIsActiveByDefault")
                                        <span></span>
                                    </label>
                                    <span class="m-form__help">@L("NewRegisteredUsersIsActiveByDefault_Hint")</span>
                                </div>
                                <label for="Setting_UseCaptchaOnRegistration" class="m-checkbox">
                                    <input id="Setting_UseCaptchaOnRegistration" type="checkbox" name="UseCaptchaOnRegistration" value="true" @(Model.Settings.UserManagement.UseCaptchaOnRegistration ? "checked=\"checked\"" : "")>
                                    @L("UseCaptchaOnRegistration")
                                    <span></span>
                                </label>
                            </div>
                        </form>

                        @if (!ViewBag.IsMultiTenancyEnabled && Model.Settings.Ldap.IsModuleEnabled)
                        {
                            <form id="LdapSettingsForm">
                                <h5 class="margin-top-20">@L("LdapSettings")</h5>
                                <label for="Setting_LdapIsEnabled" class="m-checkbox">
                                    <input id="Setting_LdapIsEnabled" type="checkbox" name="IsEnabled" value="true" @(Model.Settings.Ldap.IsEnabled ? "checked=\"checked\"" : "")>
                                    @L("EnableLdapAuthentication")
                                    <span></span>
                                </label>
                                <div class="form-group">
                                    <label>@L("DomainName")</label>
                                    <input type="text" name="Domain" class="form-control" value="@Model.Settings.Ldap.Domain" maxlength="128">
                                </div>

                                <div class="form-group">
                                    <label>@L("UserName")</label>
                                    <input type="text" name="UserName" class="form-control" value="@Model.Settings.Ldap.UserName" maxlength="128">
                                </div>

                                <div class="form-group">
                                    <label>@L("Password")</label>
                                    <input type="password" name="Password" class="form-control" value="@Model.Settings.Ldap.Password" maxlength="128" autocomplete="off" >
                                </div>
                            </form>
                        }

                        <form id="OtherSettingsForm">
                            <h5 class="margin-top-20">@L("OtherSettings")</h5>
                            <label for="Settings_IsEmailConfirmationRequiredForLogin" class="m-checkbox">
                                <input id="Settings_IsEmailConfirmationRequiredForLogin" class="md-check" type="checkbox" name="IsEmailConfirmationRequiredForLogin" value="true" @(Model.Settings.UserManagement.IsEmailConfirmationRequiredForLogin ? "checked=\"checked\"" : "")>
                                @L("EmailConfirmationRequiredForLogin")
                                <span></span>
                            </label>
                        </form>
                    </div>

                    <div id="SecurityManagementTab" class="tab-pane">
                        <div>
                            <h5>@L("PasswordComplexity")</h5>
                            <label for="Setting_PasswordComplexity_UseDefaultSettings" class="m-checkbox">
                                <input id="Setting_PasswordComplexity_UseDefaultSettings" type="checkbox" name="UseDefaultSettings" value="true" @(Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "checked=\"checked\"" : "")>
                                @L("UseDefaultSettings")
                                <span></span>
                            </label>
                            <form id="PasswordComplexitySettingsForm" style="@(Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "display:none;" : "")">
                                <div class="m-checkbox-list">
                                    <label for="Setting_PasswordComplexity_RequireDigit" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireDigit" type="checkbox" name="RequireDigit" value="true" @(Model.Settings.Security.PasswordComplexity.RequireDigit ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireDigit")
                                        <span></span>
                                    </label>
                                    <label for="Setting_PasswordComplexity_RequireLowercase" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireLowercase" type="checkbox" name="RequireLowercase" value="true" @(Model.Settings.Security.PasswordComplexity.RequireLowercase ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireLowercase")
                                        <span></span>
                                    </label>
                                    <label for="Setting_PasswordComplexity_RequireNonAlphanumeric" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireNonAlphanumeric" type="checkbox" name="RequireNonAlphanumeric" value="true" @(Model.Settings.Security.PasswordComplexity.RequireNonAlphanumeric ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireNonAlphanumeric")
                                        <span></span>
                                    </label>
                                    <label for="Setting_PasswordComplexity_RequireUppercase" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireUppercase" type="checkbox" name="RequireUppercase" value="true" @(Model.Settings.Security.PasswordComplexity.RequireUppercase ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireUppercase")
                                        <span></span>
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label>@L("PasswordComplexity_RequiredLength")</label>
                                    <input type="number" name="RequiredLength" class="form-control" value="@Model.Settings.Security.PasswordComplexity.RequiredLength">
                                </div>
                            </form>
                            <form id="DefaultPasswordComplexitySettingsForm" style="@(!Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "display:none;" : "")">
                                <div class="m-checkbox-list">
                                    <label for="Setting_DefaultPasswordComplexity_RequireDigit" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireDigit" type="checkbox" name="RequireDigit" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireDigit ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireDigit")
                                        <span></span>
                                    </label>
                                    <label for="Setting_DefaultPasswordComplexity_RequireLowercase" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireLowercase" type="checkbox" name="RequireLowercase" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireLowercase ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireLowercase")
                                        <span></span>
                                    </label>
                                    <label for="Setting_DefaultPasswordComplexity_RequireNonAlphanumeric" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireNonAlphanumeric" type="checkbox" name="RequireNonAlphanumeric" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireNonAlphanumeric ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireNonAlphanumeric")
                                        <span></span>
                                    </label>
                                    <label for="Setting_DefaultPasswordComplexity_RequireUppercase" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireUppercase" type="checkbox" name="RequireUppercase" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireUppercase ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireUppercase")
                                        <span></span>
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label>@L("PasswordComplexity_RequiredLength")</label>
                                    <input type="number" name="RequiredLength" class="form-control" value="@Model.Settings.Security.DefaultPasswordComplexity.RequiredLength" disabled>
                                </div>
                            </form>
                        </div>

                        <div>
                            <h5>@L("UserLockOut")</h5>
                            <form id="UserLockOutSettingsForm">
                                <label for="Setting_UserLockOut_IsEnabled" class="m-checkbox">
                                    <input id="Setting_UserLockOut_IsEnabled" type="checkbox" name="IsEnabled" value="true" @(Model.Settings.Security.UserLockOut.IsEnabled ? "checked=\"checked\"" : "")>
                                    @L("EnableUserAccountLockingOnFailedLoginAttemts")
                                    <span></span>
                                </label>
                                <div class="form-group">
                                    <label>@L("MaxFailedAccessAttemptsBeforeLockout")</label>
                                    <input type="number" name="MaxFailedAccessAttemptsBeforeLockout" class="form-control" value="@Model.Settings.Security.UserLockOut.MaxFailedAccessAttemptsBeforeLockout">
                                </div>
                                <div class="form-group">
                                    <label>@L("DefaultAccountLockoutDurationAsSeconds")</label>
                                    <input type="number" name="DefaultAccountLockoutSeconds" class="form-control" value="@Model.Settings.Security.UserLockOut.DefaultAccountLockoutSeconds">
                                </div>
                            </form>
                        </div>

                        @if (!ViewBag.IsMultiTenancyEnabled || Model.Settings.Security.TwoFactorLogin.IsEnabledForApplication)
                        {
                            <div>
                                <h5>@L("TwoFactorLogin")</h5>
                                <form id="TwoFactorLoginSettingsForm">
                                    <div class="md-checkbox-list">
                                        <label for="Setting_TwoFactorLogin_IsEnabled" class="m-checkbox">
                                            <input id="Setting_TwoFactorLogin_IsEnabled" type="checkbox" name="IsEnabled" value="true" @(Model.Settings.Security.TwoFactorLogin.IsEnabled ? "checked=\"checked\"" : "")>
                                            @L("EnableTwoFactorLogin")
                                            <span></span>
                                        </label>
                                        @if (!ViewBag.IsMultiTenancyEnabled)
                                        {
                                            <label for="Setting_TwoFactorLogin_IsEmailProviderEnabled" class="m-checkbox">
                                                <input id="Setting_TwoFactorLogin_IsEmailProviderEnabled" type="checkbox" value="true" name="IsEmailProviderEnabled" @(Model.Settings.Security.TwoFactorLogin.IsEmailProviderEnabled ? "checked=\"checked\"" : "")>
                                                @L("IsEmailVerificationEnabled")
                                                <span></span>
                                            </label>
                                            <label for="Setting_TwoFactorLogin_IsSmsProviderEnabled" class="m-checkbox">
                                                <input id="Setting_TwoFactorLogin_IsSmsProviderEnabled" type="checkbox" value="true" name="IsSmsProviderEnabled" @(Model.Settings.Security.TwoFactorLogin.IsSmsProviderEnabled ? "checked=\"checked\"" : "")>
                                                @L("IsSmsVerificationEnabled")
                                                <span></span>
                                            </label>
                                            <label for="Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled" class="m-checkbox">
                                                <input id="Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled" type="checkbox" name="IsGoogleAuthenticatorEnabled" value="true" @(Model.Settings.Security.TwoFactorLogin.IsGoogleAuthenticatorEnabled ? "checked=\"checked\"" : "")>
                                                @L("IsGoogleAuthenticatorEnabled")
                                                <span></span>
                                            </label>
                                        }
                                        <label for="Setting_TwoFactorLogin_IsRememberBrowserEnabled" class="m-checkbox">
                                            <input id="Setting_TwoFactorLogin_IsRememberBrowserEnabled" type="checkbox" value="true" name="IsRememberBrowserEnabled" @(Model.Settings.Security.TwoFactorLogin.IsRememberBrowserEnabled ? "checked=\"checked\"" : "")>
                                            @L("AllowToRememberBrowserForTwoFactorLogin")
                                            <span></span>
                                        </label>
                                    </div>
                                </form>
                            </div>
                        }
                    </div>

                    @if (!ViewBag.IsMultiTenancyEnabled)
                    {
                        <div class="tab-pane" id="SettingsEmailSmtpTab">
                            <form id="EmailSmtpSettingsForm">
                                <div class="form-group">
                                    <label>@L("DefaultFromAddress")</label>
                                    <input type="email" name="DefaultFromAddress" class="form-control" value="@Model.Settings.Email.DefaultFromAddress" maxlength="@XyAuto.It.Authorization.Users.User.MaxEmailAddressLength">
                                </div>

                                <div class="form-group">
                                    <label>@L("DefaultFromDisplayName")</label>
                                    <input type="text" name="DefaultFromDisplayName" class="form-control" value="@Model.Settings.Email.DefaultFromDisplayName" maxlength="128">
                                </div>

                                <div class="form-group">
                                    <label>@L("SmtpHost")</label>
                                    <input type="text" name="SmtpHost" class="form-control" value="@Model.Settings.Email.SmtpHost" maxlength="64">
                                </div>

                                <div class="form-group">
                                    <label>@L("SmtpPort")</label>
                                    <input type="number" name="SmtpPort" class="form-control" value="@Model.Settings.Email.SmtpPort" maxlength="5">
                                </div>

                                <div class="m-checkbox-list">
                                    <label for="Settings_SmtpEnableSsl" class="m-checkbox">
                                        <input id="Settings_SmtpEnableSsl" type="checkbox" name="SmtpEnableSsl" value="true" @Html.Raw(Model.Settings.Email.SmtpEnableSsl ? "checked=\"checked\"" : "")>
                                        @L("UseSsl")
                                        <span></span>
                                    </label>
                                    <label for="Settings_SmtpUseDefaultCredentials" class="m-checkbox">
                                        <input id="Settings_SmtpUseDefaultCredentials" type="checkbox" name="SmtpUseDefaultCredentials" value="true" @Html.Raw(Model.Settings.Email.SmtpUseDefaultCredentials ? "checked=\"checked\"" : "")>
                                        @L("UseDefaultCredentials")
                                        <span></span>
                                    </label>
                                </div>

                                <div class="form-group">
                                    <label>@L("DomainName")</label>
                                    <input type="text" name="SmtpDomain" class="form-control" value="@Model.Settings.Email.SmtpDomain" maxlength="128">
                                </div>

                                <div class="form-group">
                                    <label>@L("UserName")</label>
                                    <input type="text" name="SmtpUserName" class="form-control" value="@Model.Settings.Email.SmtpUserName" maxlength="128">
                                </div>

                                <div class="form-group">
                                    <label>@L("Password")</label>
                                    <input type="password" name="SmtpPassword" class="form-control" value="@Model.Settings.Email.SmtpPassword" maxlength="128" autocomplete="off" >
                                </div>

                                <h5>@L("TestEmailSettingsHeader")</h5>

                                <div class="row">
                                    <div class="form-group col-md-4">
                                        <input id="TestEmailAddressInput" type="text" class="form-control input-sm" value="@ViewBag.CurrentUserEmail">
                                    </div>
                                    <div class="form-group col-md-2">
                                        <button id="SendTestEmailButton" class="btn green-haze" type="button">@L("SendTestEmail")</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    }
                    @if (ViewBag.IsMultiTenancyEnabled)
                    {
                        <div class="tab-pane" id="BillingTab">
                            <form id="BillingSettingsForm" class="m-form">
                                <h5>@L("InvoiceInformation")</h5>
                                <div class="form-group">
                                    <label>@L("LegalName")</label>
                                    <input type="text" class="form-control" name="LegalName" value="@Model.Settings.Billing.LegalName" maxlength="64">
                                </div>

                                <div class="form-group">
                                    <label>@L("Address")</label>
                                    <textarea rows="5" class="form-control" name="Address" class="form-control" maxlength="256">@Model.Settings.Billing.Address</textarea>
                                </div>

                                <div class="form-group">
                                    <label>@L("Tax/VatNo")</label>
                                    <input type="text" class="form-control" name="TaxVatNo" value="@Model.Settings.Billing.TaxVatNo" maxlength="32">
                                </div>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


